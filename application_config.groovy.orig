import org.apache.log4j.DailyRollingFileAppender

// DEVELOPMENT CONFIGURATION - DELETE BELOW BLOCK IF PRODUCTION
greenmail.disabled = false
grails {
  resources.debug = true
  gsp.enable.reload = true
  logging.jul.usebridge = true
  mail {
    port = com.icegreen.greenmail.util.ServerSetupTest.SMTP.port
  }
}
environments {
  development {
    dataSource {
      pooled = true
      driverClassName = "org.h2.Driver"
      username = "sa"
      password = ""
      dbCreate = "create-drop"
      url = "jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000"
    }
  }
}
// END DEVELOPMENT CONFIGURATION - DELETE ABOVE BLOCK IF PRODUCTION

// PRODUCTION CONFIGURATION - DELETE BELOW BLOCK IF DEVELOPMENT
greenmail.disabled = true
testDataConfig.enabled = false
grails {
  resources.debug = false  
  gsp.enable.reload = false
  logging.jul.usebridge = false
  mail {
    host = 'localhost' // More advanced mail config available per: http://grails.org/plugin/mail
  }
}
dataSource {
  dbCreate = "update"
  dialect= org.hibernate.dialect.MySQL5InnoDBDialect
  jndiName= "java:comp/env/jdbc/APPNAME" 
}
// END PRODUCTION CONFIGURATION - DELETE ABOVE BLOCK IF DEVELOPMENT

// COMMON CONFIGURATION
appName=""
grails {
  serverURL = ""
  mail {
    default.from="noreply@aaf.edu.au"
  }
}

aaf {
  base {
    //Session Expiry Warning - minutes
    session_warning = 50 
    session_decision_time = 5

    // Deployed AAF environment [development | test | production]
    deployment_environment = "development"

    administration {
      initial_administrator_auto_populate = false
    }

    realms {
      federated { 
        active = true
        automate_login = false
        auto_provision = true
        sso_endpoint = "/Shibboleth.sso/Login"

        // Supported as fallback for problematic webservers
        // AAF webserver configuration shouldn't require this to be false.
        // See https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPAttributeAccess for more
        request.attributes = true 
        
        
        mapping {
          principal = "persistent-id"   // The unique and persistent ID used to identify this principal for current and subsequent sessions (eduPersonTargetedID)
          credential = "Shib-Session-ID"  // The internal session key assigned to the session associated with the request and hence the credential used
          entityID = "Shib-Identity-Provider" // The entityID of the IdP that authenticated the subject associated with the request.
          
          applicationID = "Shib-Application-ID" // The applicationId property derived for the request.     
          idpAuthenticationInstant = "Shib-Authentication-Instant" // The ISO timestamp provided by the IdP indicating the time of authentication. 
          
          cn = "cn"
          email= "mail"
          sharedToken = "auEduPersonSharedToken"
        }

        development {
          active = false
        }
      }
    }
  }
}


// Logging
log4j = {
  appenders {
    appender new DailyRollingFileAppender(name:"app-security", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/app-security.log", datePattern:"'.'yyyy-MM-dd")
    appender new DailyRollingFileAppender(name:"app", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/app.log", datePattern:"'.'yyyy-MM-dd")
    appender new DailyRollingFileAppender(name:"app-grails", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/app-grails.log", datePattern:"'.'yyyy-MM-dd")
    appender new DailyRollingFileAppender(name:"stacktrace", layout:pattern(conversionPattern: "%d{[ dd.MM.yy HH:mm:ss.SSS]} %-5p %c %x - %m%n"), file:"/tmp/app-stacktrace.log", datePattern:"'.'yyyy-MM-dd")
  }

  root {
    info 'stdout'
    additivity = true
  }

  info  'app-security'  :['grails.app.filters'], additivity: false

  info  'app'           :['grails.app.controllers',
                          'grails.app.domains',
                          'grails.app.services',
                          'grails.app.realms',
                          'aaf.vhr',                       
                          'org.apache.shiro'], additivity: false
          
  warn  'app-grails'    :['org.codehaus.groovy.grails.web.servlet',
                          'org.codehaus.groovy.grails.web.pages',
                          'org.codehaus.groovy.grails.web.sitemesh',
                          'org.codehaus.groovy.grails.web.mapping.filter',
                          'org.codehaus.groovy.grails.web.mapping',
                          'org.codehaus.groovy.grails.commons',
                          'org.codehaus.groovy.grails.plugins'], additivity: false
}
